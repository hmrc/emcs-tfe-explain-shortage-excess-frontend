# microservice specific routes

->          /hmrc-frontend                                                        hmrcfrontend.Routes

->          /error                                                                error.Routes

GET         /refresh-session                                                      controllers.KeepAliveController.keepAlive()

GET         /language/:lang                                                       controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET         /assets/*file                                                         controllers.Assets.versioned(path = "/public", file: Asset)

GET         /account/sign-out-survey                                              controllers.auth.AuthController.signOut()
GET         /account/sign-out                                                     controllers.auth.AuthController.signOutNoSurvey()
GET         /account/signed-out                                                   controllers.auth.SignedOutController.onPageLoad()
GET         /account/timeout                                                      controllers.TimeoutController.onPageLoad()

GET         /trader/:ern/movement/:arc                                            controllers.IndexController.onPageLoad(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/no-information-delay                       controllers.JourneyRecoveryController.onPageLoad(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/when-receive-shortage-excess               controllers.WhenReceiveShortageExcessController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/when-receive-shortage-excess               controllers.WhenReceiveShortageExcessController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/when-receive-shortage-excess/change        controllers.WhenReceiveShortageExcessController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/when-receive-shortage-excess/change        controllers.WhenReceiveShortageExcessController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/how-give-information                       controllers.HowGiveInformationController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/how-give-information                       controllers.HowGiveInformationController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/how-give-information/change                controllers.HowGiveInformationController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/how-give-information/change                controllers.HowGiveInformationController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET        /trader/:ern/movement/:arc/give-information-movement                     controllers.GiveInformationMovementController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST       /trader/:ern/movement/:arc/give-information-movement                     controllers.GiveInformationMovementController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET        /trader/:ern/movement/:arc/give-information-movement/change              controllers.GiveInformationMovementController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST       /trader/:ern/movement/:arc/give-information-movement/change              controllers.GiveInformationMovementController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/select-item                                controllers.SelectItemController.onPageLoad(ern: String, arc: String)
